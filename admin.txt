OK, 

You have a class Library callled Domain Object.

All your data classes go here,  No functions or task or methods. Just skellition Data Classes.

//////////////////////////////////////////
1: How To Create A  Calls Library Project 
Go to the folder you wish to create the new class library in.
CMD: dotnet new classlib
////////////////////////////////////////////

Also you have a services library for you tasks

//////////////////////////////////////////
Same step as above
////////////////////////////////////////////

Now you need a Console project to output your shit.

///////////////////////////////////////////
2: How TO Create a Console Project
Go to the folder you wish to create the new class library in.
CMD: dotnet new console
//////////////////////////////////////////////

///////////////////////////////////////////////////
NOTE
after each new project check the *.csproj file in the project and 
replace 'netstandard2.0' with 'netcoreapp2.2'
/////////////////////////////////////////////////////////////////

/// link to all new projects
https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new?tabs=netcore21

Now you create a Visual Studio Project to start work from.

3: go to your projects folder, add a new folder in there with the correct name of you new project

IE: CWC.Gyro.Step.Detector.Project

Now open that project and add all the sub projects you need to get the project working.

In this case CWC.Domain.Objects, CWC.Services, CWC.Gyro.Step.Detector, 

Now,

You can wire up the sub projects so they can tal to each other.

In CWC.Services add a referance to CWC.Domain.Objects
In CWC.Gyro.Step.Detector add a referacne to CWC.Domain.Objects & CWC.Services 

You good to go.

Never ever referance another project in CWC.Domain.Objects.

Every one referance CWC.Domain.Objects, CWC.Domain.Objects referance no one.
 


Forgot when you have wired it all up  Add Microsoft.Extensions.DependencyInjection to you console app so you can use the most upto date factory patterns
